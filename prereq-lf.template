{
   "Description":"CloudFormation template to create AWS Lake Formation workshop resources",
   "Parameters":{
      "TPCDBName":{
         "Type":"String",
         "Default":"tpc",
         "AllowedValues":[
            "tpc"
         ],
         "Description":"Name of the database that will be created."
      },
      "DBMasterUser":{
         "Type":"String",
         "Default":"tpcadmin",
         "Description":"Master username for TPC database."
      },
      "DBMasterPassword":{
         "Type":"String",
         "Default":"",
         "Description":"Master password for TPC database."
      },
      "TestUserPassword":{
         "Type":"String",
         "Default":"",
         "Description":"Password for all test users."
      },
      "EC2KeyPair":{
         "Description":"Amazon EC2 Key Pair",
         "Type":"AWS::EC2::KeyPair::KeyName",
         "MinLength":1
      },
      "LatestAmiId":{
         "Type":"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
         "Default":"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
         "AllowedValues":[
            "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
         ],
         "Description":"Image ID for the EC2 helper instance. DO NOT change this."
      },
      "RDSSubnetGroup":{
         "Type":"String",
         "Default":"",
         "Description":"Provide public subnet for RDS."
      },
      "PublicSubnet":{
         "Type":"String",
         "Default":"",
         "Description":"Provide public subnet for Ec2."
      },
      "RDSSecurityGroup":{
         "Type":"String",
         "Default":"",
         "Description":"Provide security for RDS."
      },
      "IGRouteTable":{
         "Type":"String",
         "Default":"",
         "Description":"Provide public routetable for S3 endpoint."
      },
      "LakeFormationVPC":{
         "Type":"String",
         "Default":"",
         "Description":"Provide VPC-ID"
      }
   },
   "Resources":{
      "TPCDatabase":{
         "Type":"AWS::RDS::DBInstance",
         "DeletionPolicy":"Delete",
         "Properties":{
            "DBInstanceClass":"db.r5.large",
            "DBInstanceIdentifier":"tpc-database",
            "DBName": {
               "Ref":"TPCDBName"
            },
            "AllocatedStorage":"100",
            "DBSubnetGroupName":{
               "Ref":"RDSSubnetGroup"
            },
            "Engine":"MySQL",
            "EngineVersion":"5.7.22",
            "MasterUsername":{
               "Ref":"DBMasterUser"
            },
            "MasterUserPassword":{
               "Ref":"DBMasterPassword"
            },
            "BackupRetentionPeriod":"0",
            "StorageType":"gp2",
            "AllowMajorVersionUpgrade":false,
            "VPCSecurityGroups":[
               {
                  "Ref":"RDSSecurityGroup"
               }
            ],
            "PubliclyAccessible":true
         }
      },
   "S3Endpoint":{
      "Type":"AWS::EC2::VPCEndpoint",
      "Properties":{
        "PolicyDocument":{
          "Version":"2012-10-17",
          "Statement":[
            {
              "Effect":"Allow",
              "Action":"*",
              "Principal":"*",
              "Resource":"*"
            }
          ]
        },
        "RouteTableIds":[
          {
            "Ref":"IGRouteTable"
          }
        ],
        "ServiceName":{
          "Fn::Sub":"com.amazonaws.${AWS::Region}.s3"
        },
        "VpcId":{
          "Ref":"LakeFormationVPC"
        }
      }
    },   
   "TPCGlueConnector":{
      "Type":"AWS::Glue::Connection",
      "Properties":{
        "CatalogId":{
          "Ref":"AWS::AccountId"
        },
        "ConnectionInput":{
          "Name":"TPCGlueConnector",
          "ConnectionType":"JDBC",
          "PhysicalConnectionRequirements":{
            "AvailabilityZone":{
              "Fn::Select":[
                0,
                {
                  "Fn::GetAZs":{
                    "Ref":"AWS::Region"
                  }
                }
              ]
            },
            "SecurityGroupIdList":[
              {
                "Ref":"RDSSecurityGroup"
              }
            ],
            "SubnetId":{
              "Ref":"PublicSubnet"
            }
          },
          "ConnectionProperties":{
            "JDBC_CONNECTION_URL":{
              "Fn::Join":[
                "",
                [
                  "jdbc:mysql://",
                  {
                    "Fn::GetAtt":[
                      "TPCDatabase",
                      "Endpoint.Address"
                    ]
                  },
                  ":3306/tpc"
                ]
              ]
            },
            "USERNAME":{
              "Ref":"DBMasterUser"
            },
            "PASSWORD":{
              "Ref":"DBMasterPassword"
            },
            "JDBC_ENFORCE_SSL":"false"
          }
        }
      }
    },
      "GlueServiceRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
           "AssumeRolePolicyDocument":{
             "Version":"2012-10-17",
             "Statement":[
               {
                 "Effect":"Allow",
                 "Principal":{
                   "Service":[
                     "glue.amazonaws.com",
                     "lakeformation.amazonaws.com",
                     "firehose.amazonaws.com"
                   ]
                 },
                 "Action":"sts:AssumeRole"
               }
             ]
           },
           "ManagedPolicyArns":[
             "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
           ],
           "Policies":[
             {
               "PolicyName":"LF-Data-Lake-Storage-Policy",
               "PolicyDocument":{
                 "Version":"2012-10-17",
                 "Statement":[
                   {
                     "Effect":"Allow",
                     "Action":[
                       "s3:*"
                     ],
                     "Resource":[
                       {
                         "Fn::Join":[
                           "",
                           [
                             "arn:aws:s3:::",
                             {
                               "Ref":"DataLakeBucket"
                             },
                             "/*"
                           ]
                         ]
                       },
                       {
                         "Fn::Join":[
                           "",
                           [
                             "arn:aws:s3:::",
                             {
                               "Ref":"DataLakeBucket"
                             }
                           ]
                         ]
                       }
                     ]
                   }
                 ]
               }
             },
             {
               "PolicyName":"Glue-Demo-Access-Policy",
               "PolicyDocument":{
                 "Version":"2012-10-17",
                 "Statement":[
                   {
                     "Effect":"Allow",
                     "Action":[
                       "s3:*"
                     ],
                     "Resource":[
                       {
                         "Fn::Join":[
                           "",
                           [
                             "arn:aws:s3:::",
                             {
                               "Ref":"LFWorkshopBucket"
                             },
                             "/*"
                           ]
                         ]
                       },
                       {
                         "Fn::Join":[
                           "",
                           [
                             "arn:aws:s3:::",
                             {
                               "Ref":"LFWorkshopBucket"
                             }
                           ]
                         ]
                       }
                     ]
                   }
                 ]
               }
             },
             {
               "PolicyName":"LF-DataAccess-Policy",
               "PolicyDocument":{
                 "Version":"2012-10-17",
                 "Statement":[
                   {
                     "Effect":"Allow",
                     "Action":[
                       "lakeformation:GetDataAccess",
                       "lakeformation:GrantPermissions"
                     ],
                     "Resource":"*"
                   }
                 ]
               }
             },
             {
               "PolicyName":"LF-Workflow-Policy",
               "PolicyDocument":{
                 "Version":"2012-10-17",
                 "Statement":[
                   {
                     "Effect":"Allow",
                     "Action":[
                       "iam:PassRole"
                     ],
                     "Resource":[
                       {
                         "Fn::Join":[
                           "",
                           [
                             "arn:aws:iam::",
                             {
                               "Ref":"AWS::AccountId"
                             },
                             ":role/LF-GlueServiceRole"
                           ]
                         ]
                       },
                       {
                         "Fn::Join":[
                           "",
                           [
                             "arn:aws:iam::",
                             {
                               "Ref":"AWS::AccountId"
                             },
                             ":role/LakeFormationWorkflowRole"
                           ]
                         ]
                       }
                     ]
                   }
                 ]
               }
             }
           ],
           "RoleName":"LF-GlueServiceRole"
         }
       },
      "DataLakeBucket":{
         "Type":"AWS::S3::Bucket",
         "Properties":{
            "BucketName":{
               "Fn::Join":[
                  "-",
                  [
                     "lf-data-lake",
                     {
                        "Ref":"AWS::AccountId"
                     }
                  ]
               ]
            }
         }
      },
      "LFWorkshopBucket":{
         "Type":"AWS::S3::Bucket",
         "Properties":{
            "BucketName":{
               "Fn::Join":[
                  "-",
                  [
                     "lf-workshop",
                     {
                        "Ref":"AWS::AccountId"
                     }
                  ]
               ]
            }
         }
      },
      "AdminUser":{
         "Type":"AWS::IAM::User",
         "Properties":{
            "Path":"/",
            "LoginProfile":{
               "Password":{
                  "Ref":"TestUserPassword"
               },
               "PasswordResetRequired":false
            },
            "Policies":[
               {
                  "PolicyName":"LF-DataLake-Admin-Policy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "lakeformation:*",
                              "cloudtrail:DescribeTrails",
                              "cloudtrail:LookupEvents",
                              "glue:GetDatabase",
                              "glue:CreateDatabase",
                              "glue:UpdateDatabase",
                              "glue:DeleteDatabase",
                              "glue:SearchTables",
                              "glue:CreateTable",
                              "glue:UpdateTable",
                              "glue:DeleteTable",
                              "glue:Get*",
                              "glue:List*",
                              "glue:BatchGetWorkflows",
                              "glue:DeleteWorkflow",
                              "glue:GetWorkflowRuns",
                              "glue:StartWorkflowRun",
                              "glue:GetWorkflow",
                              "s3:ListBucket",
                              "s3:GetBucketLocation",
                              "s3:ListAllMyBuckets",
                              "s3:GetBucketAcl",
                              "iam:ListUsers",
                              "iam:ListRoles",
                              "iam:GetRole",
                              "iam:GetRolePolicy",
                              "cloudformation:*",
                              "elasticmapreduce:*",
                              "tag:Get*",
                              "glue:BatchGetCrawlers",
                              "ec2:AuthorizeSecurityGroupEgress",
                              "ec2:AuthorizeSecurityGroupIngress",
                              "ec2:RevokeSecurityGroupEgress",
                              "ec2:RevokeSecurityGroupIngress"
                           ],
                           "Resource":"*"
                        },
                        {
                           "Effect":"Allow",
                           "Action":"iam:PassRole",
                           "Resource":[
                              "arn:aws:iam::*:role/LF-GlueServiceRole",
                              "arn:aws:iam::*:role/LF-EMR-Notebook*"
                           ]
                        }
                     ]
                  }
               }
            ],
            "ManagedPolicyArns":[
               "arn:aws:iam::aws:policy/AWSLakeFormationCrossAccountManager",
               "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
            ],
            "UserName":"lf-admin"
         }
      },
      "DeveloperUser":{
         "Type":"AWS::IAM::User",
         "Properties":{
            "Path":"/",
            "LoginProfile":{
               "Password":{
                  "Ref":"TestUserPassword"
               },
               "PasswordResetRequired":false
            },
            "Policies":[
               {
                  "PolicyName":"LF-Athena-Query-Result-Policy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "s3:Put*",
                              "s3:Get*",
                              "s3:List*"
                           ],
                           "Resource":[
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::",
                                       {
                                          "Ref":"LFWorkshopBucket"
                                       },
                                       "/athena-results/*"
                                    ]
                                 ]
                              }
                           ]
                        }
                     ]
                  }
               }
            ],
            "ManagedPolicyArns":[
               "arn:aws:iam::aws:policy/AmazonAthenaFullAccess"
            ],
            "UserName":"lf-developer"
         }
      },
      "CampaignManagerUser":{
         "Type":"AWS::IAM::User",
         "Properties":{
            "Path":"/",
            "LoginProfile":{
               "Password":{
                  "Ref":"TestUserPassword"
               },
               "PasswordResetRequired":false
            },
            "Policies":[
               {
                  "PolicyName":"LF-Athena-Query-Result-Policy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "s3:Put*",
                              "s3:Get*",
                              "s3:List*"
                           ],
                           "Resource":[
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::",
                                       {
                                          "Ref":"LFWorkshopBucket"
                                       },
                                       "/athena-results/*"
                                    ]
                                 ]
                              }
                           ]
                        }
                     ]
                  }
               }
            ],
            "ManagedPolicyArns":[
               "arn:aws:iam::aws:policy/AmazonAthenaFullAccess"
            ],
            "UserName":"lf-campaign-manager"
         }
      },
      "EC2Role":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "Path":"/",
            "RoleName":"EC2Role",
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "Service":[
                           "ec2.amazonaws.com"
                        ]
                     },
                     "Action":"sts:AssumeRole"
                  }
               ]
            },
            "ManagedPolicyArns":[
               "arn:aws:iam::aws:policy/AdministratorAccess"
            ]
         }
      },
      "EC2InstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{
            "Path":"/",
            "Roles":[
               {
                  "Ref":"EC2Role"
               }
            ]
         }
      },
      "BackUpRestoreInstance":{
         "Type":"AWS::EC2::Instance",
         "Properties":{
            "InstanceType":"t2.small",
            "ImageId":{
               "Ref":"LatestAmiId"
            },
            "KeyName":{
               "Ref":"EC2KeyPair"
            },
            "IamInstanceProfile":{
               "Ref":"EC2InstanceProfile"
            },
            "NetworkInterfaces":[
               {
                  "AssociatePublicIpAddress":"true",
                  "DeviceIndex":"0",
                  "GroupSet":[
                     {
                        "Ref":"RDSSecurityGroup"
                     }
                  ],
                  "SubnetId":{
                     "Ref":"PublicSubnet"
                  }
               }
            ],
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "#!/bin/bash -ex\n",
                        "sudo yum -y install mysql\n",
                        "aws s3 cp s3://aws-data-analytics-workshops/lake-formation-workshop/sampledata/tpc.backup /tmp/\n",
                        "gunzip < /tmp/tpc.backup | mysql -h ",
                        {
                           "Fn::GetAtt":[
                              "TPCDatabase",
                              "Endpoint.Address"
                           ]
                        },
                        " -u ",
                        {
                           "Ref":"DBMasterUser"
                        },
                        " -p'",
                        {
                           "Ref":"DBMasterPassword"
                        },
                        "' ",
                        {
                           "Ref":"TPCDBName"
                        },
                        "\n"
                     ]
                  ]
               }
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"EC2-DB-Loader"
               }
            ]
         },
         "DependsOn":[
            "TPCDatabase"
         ]
      },
      "AthenaDeveloperNamedQuery":{
         "Type":"AWS::Athena::NamedQuery",
         "Properties":{
            "Database":{
               "Ref":"TPCDBName"
            },
            "Description":"A developer query on web page and web sales data.",
            "Name":"LF-Developer-Query",
            "QueryString":"/*\n * Developer can only see web_page & web_sales tables\n */\nSELECT sum(ws_net_paid_inc_tax) NetPaid,\n        ws_web_site_sk WebSiteID\nFROM dl_tpc_web_sales ws, dl_tpc_web_page wp WHERE ws.ws_web_site_sk = wp.wp_web_page_sk GROUP BY  ws_web_site_sk;\n\n/*\n Check out the web_sales table\n*/ SELECT COUNT(*) FROM dl_tpc_web_sales;\n\n/* Verify that a developer cannot access any other table. This should give a Insufficient Privileges message */ SELECT * FROM dl_tpc_item limit 10;\n"
         }
      },
      "AthenaCampaignManagerNamedQuery":{
         "Type":"AWS::Athena::NamedQuery",
         "Properties":{
            "Database":{
               "Ref":"TPCDBName"
            },
            "Description":"Sample query issued by Campaign Manager.",
            "Name":"LF-CampaignManager-Query",
            "QueryString":"/*\n * Sample Query from a Campaign Manager who is interested in marketing analytics\n */\n\nSELECT count(distinct i.i_item_sk) NumItems, p.p_promo_id PromotionId FROM dl_tpc_item i, dl_tpc_promotion p, dl_tpc_web_sales ws WHERE i.i_item_sk = ws_item_sk AND ws.ws_promo_sk = p.p_promo_sk GROUP BY p.p_promo_id;\n/*\n * Make sure Campaign manager cannot access web_page table\n */\nSELECT count(*) FROM dl_tpc_web_page;\n"
         }
      }
   },
   "Outputs":{
      "LFDataLakeBucketName":{
         "Description":"Lake Formation Data Lake Bucket Name",
         "Value":{
            "Ref":"DataLakeBucket"
         }
      },
      "LFWorkshopBucketName":{
         "Description":"Lake Formation Workshop Bucket Name",
         "Value":{
            "Ref":"LFWorkshopBucket"
         }
      },
      "AthenaQueryResultLocation":{
         "Description":"Athena Query Result Location",
         "Value":{
            "Fn::Join":[
               "",
               [
                  "s3://",
                  {
                     "Ref":"LFWorkshopBucket"
                  },
                  "/athena-results/"
               ]
            ]
         }
      },
      "MetadataLocation":{
         "Description":"Metadata Location",
         "Value":{
            "Fn::Join":[
               "",
               [
                  "s3://",
                  {
                     "Ref":"LFWorkshopBucket"
                  },
                  "/metadata"
               ]
            ]
         }
      },
      "LFUsersPassword":{
         "Description":"Password for Data Lake Users",
         "Value":{
            "Ref":"TestUserPassword"
         }
      },
      "ConsoleIAMLoginUrl":{
         "Description":"Console IAM Login URL to try out different users",
         "Value":{
            "Fn::Join":[
               "",
               [
                  "https://",
                  {
                     "Ref":"AWS::AccountId"
                  },
                  ".signin.aws.amazon.com/console"
               ]
            ]
         }
      }
   }
} 